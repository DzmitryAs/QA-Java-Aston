package Lesson_7_Animal;

/*
Создать классы Собака и Кот с наследованием от класса Животное.
Все животные могут бежать и плыть. В качестве параметра каждому методу передается длина препятствия. Результатом выполнения действия будет печать в консоль. (Например, dogBobik.run(150); -> 'Бобик пробежал 150 м.');
У каждого животного есть ограничения на действия (бег: кот 200 м., собака 500 м.; плавание: кот не умеет плавать, собака 10 м.).
Добавить подсчет созданных котов, собак и животных.
Расширить задачу, добавив для котов возможность кушать из миски, выполнив следующие пункты:
Сделать так, чтобы в миске с едой не могло получиться отрицательного количества еды (например, в миске 10 еды, а кот пытается покушать 15-20).
Каждому коту нужно добавить поле сытость (когда создаем котов, они голодны). Если коту удалось покушать (хватило еды), сытость = true.
Считаем, что если коту мало еды в миске, то он её просто не трогает, то есть не может быть наполовину сыт (это сделано для упрощения логики программы).
Создать массив котов и миску с едой, попросить всех котов покушать из этой миски и потом вывести информацию о сытости котов в консоль.
Добавить метод, с помощью которого можно было бы добавлять еду в миску.
 */

public class Main {
    public static void main(String[] args) {
        Cat cat1 = new Cat("cat1", 2);
        Cat cat2 = new Cat("cat2", 2);
        Dog dog1 = new Dog("dog1");
        cat1.run(200);
        cat2.run(201);
        dog1.run(500);
        dog1.run(501);
        cat1.swim(5);
        dog1.swim(10);
        dog1.swim(11);

        Animal.printQuantityOfAnimals();
        Cat.printQuantityOfCats();
        Dog.printQuantityOfDogs();

        System.out.println();

        Cat[] cats = new Cat[4];
        cats[0] = cat1;
        cats[1] = cat2;
        cats[2] = new Cat("cat3", 3);
        cats[3] = new Cat("cat4", 1);

        Food food = new Food();
        food.increaseAmountOfFood(4);

        for (
                Cat cat : cats) {
            cat.eatFood(food);
        }

        food.info();

        for (Cat cat : cats) {
            cat.satietyInfo();
        }
    }
}